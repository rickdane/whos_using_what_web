<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<meta name="apple-mobile-web-app-capable" content="yes"/>
<meta name="apple-mobile-web-app-status-bar-style" content="black"/>
<title>
</title>

<link rel="stylesheet" href="http://code.jquery.com/mobile/1.2.0/jquery.mobile-1.2.0.min.css"/>
<link rel="stylesheet" href="my.css"/>
<script src="http://code.jquery.com/jquery-1.7.2.min.js">
</script>

<meta name="viewport" content="width=device-width; initial-scale=1.0; maximum-scale=1.0;user-scalable=no">
<script type="text/javascript">
    //disable zoom, must be called after loading jquery and before loading jquery mobile
    $(document).bind("mobileinit", function (event) {
        $.extend($.mobile.zoom, {locked: true, enabled: false});
    });
</script>

<script src="http://code.jquery.com/mobile/1.2.0/jquery.mobile-1.2.0.min.js">
</script>
<script src="my.js">
</script>
<!-- User-generated css -->
<style>
</style>
<!-- User-generated js -->
<script>
    try {

        $(function () {

        });

    } catch (error) {
        console.error("Your javascript has an error: " + error);
    }
</script>

<script type="text/javascript">

    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-38957491-1']);
    _gaq.push(['_trackPageview']);

    (function () {
        var ga = document.createElement('script');
        ga.type = 'text/javascript';
        ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(ga, s);
    })();

</script>

<style>
    .btnLogin {
        -moz-border-radius: 2px;
        -webkit-border-radius: 2px;
        border-radius: 15px;
        background: #a1d8f0;
        background: -moz-linear-gradient(top, #badff3, #7acbed);
        background: -webkit-gradient(linear, center top, center bottom, from(#badff3), to(#7acbed));
        -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorStr='#badff3', EndColorStr='#7acbed')";
        border: 1px solid #7db0cc !important;
        cursor: pointer;
        padding: 11px 16px;
        font: bold 11px/14px Verdana, Tahomma, Geneva;
        text-shadow: rgba(0, 0, 0, 0.2) 0 1px 0px;
        color: #fff;
        -moz-box-shadow: inset rgba(255, 255, 255, 0.6) 0 1px 1px, rgba(0, 0, 0, 0.1) 0 1px 1px;
        -webkit-box-shadow: inset rgba(255, 255, 255, 0.6) 0 1px 1px, rgba(0, 0, 0, 0.1) 0 1px 1px;
        box-shadow: inset rgba(255, 255, 255, 0.6) 0 1px 1px, rgba(0, 0, 0, 0.1) 0 1px 1px;
        margin-center: 12px;
        padding: 7px 21px;
    }

    .btnLogin:hover,
    .btnLogin:focus,
    .btnLogin:active {
        background: #a1d8f0;
        background: -moz-linear-gradient(top, #7acbed, #badff3);
        background: -webkit-gradient(linear, center top, center bottom, from(#7acbed), to(#badff3));
        -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorStr='#7acbed', EndColorStr='#badff3')";
    }

    .btnLogin:active {
        text-shadow: rgba(0, 0, 0, 0.3) 0 -1px 0px;
    }

</style>


<script language='JavaScript'>

    Memory = "0";      // initialise memory variable
    Current = "0";      //   and value of Display ("current" value)
    Operation = 0;      // Records code for eg * / etc.
    MAXLENGTH = 30;     // maximum number of digits before decimal!

    function AddDigit(dig) {

        if (Current.indexOf("!") == -1)  //if not already an error
        {
            if ((eval(Current) == 0)
                    && (Current.indexOf(".") == -1)
                    ) {
                Current = dig;
            } else {
                Current = Current + dig;
            }

            Current = Current.toLowerCase(); //FORCE LOWER CASE
        } else {
            Current = "Hint! Press 'AC'";  //Help out, if error present.
        }

        if (Current.indexOf("e0") != -1) {
            var epos = Current.indexOf("e");
            Current = Current.substring(0, epos + 1) + Current.substring(epos + 2);
        }

        if (Current.length > MAXLENGTH) {
            Current = "too long";
        }

        document.getElementById('calculator_display').value = Current;
    }

    function Dot()                  //PUT IN "." if appropriate.
    {
        if (Current.length == 0)     //no leading ".", use "0."
        {
            Current = "0.";
        } else {
            if (( Current.indexOf(".") == -1)
                    && ( Current.indexOf("e") == -1)
                    ) {
                Current = Current + ".";
            }

        }

        document.getElementById('calculator_display').value = Current;
    }

    function DoExponent() {
        if (Current.indexOf("e") == -1) {
            Current = Current + "e0";
            document.getElementById('calculator_display').value = Current;
        }

    }

    function PlusMinus() {
        if (Current.indexOf("e") != -1) {
            var epos = Current.indexOf("e-");
            if (epos != -1) {
                Current = Current.substring(0, 1 + epos) + Current.substring(2 + epos); //clip out -ve exponent
            } else {
                epos = Current.indexOf("e");
                Current = Current.substring(0, 1 + epos) + "-" + Current.substring(1 + epos); //insert -ve exponent
            }
            ;
        } else {
            if (Current.indexOf("-") == 0) {
                Current = Current.substring(1);
            } else {
                Current = "-" + Current;
            }
            ;
            if ((eval(Current) == 0)
                    && (Current.indexOf(".") == -1 )
                    ) {
                Current = "0";
            }
            ;
        }
        ;
        document.getElementById('calculator_display').value = Current;
    }

    function Clear()                //CLEAR ENTRY
    {
        Current = "0";
        document.getElementById('calculator_display').value = Current;
    }

    function AllClear()             //Clear ALL entries!
    {
        Current = "0";
        Operation = 0;                //clear operation
        Memory = "0";                  //clear memory
        document.getElementById('calculator_display').value = Current;
    }

    function Operate(op)            //STORE OPERATION e.g. + * / etc.
    {
        if (Operation != 0) {
            Calculate();
        }
        ; //'Press "=" if pending operation!
        // note that design is not good for showing *intermediate* results.

        if (op.indexOf("*") > -1) {
            Operation = 1;
        }
        ;       //codes for *
        if (op.indexOf("/") > -1) {
            Operation = 2;
        }
        ;       // slash (divide)
        if (op.indexOf("+") > -1) {
            Operation = 3;
        }
        ;       // sum
        if (op.indexOf("-") > -1) {
            Operation = 4;
        }
        ;       // difference

        Memory = Current;                 //store value
        // note how e.g. Current.value gives neither error nor value! ***
        Current = "";
        document.getElementById('calculator_display').value = Current;
    }

    function Calculate()            //PERFORM CALCULATION (= button)
    {
        if (Operation == 1) {
            Current = eval(Memory) * eval(Current);
        }
        ;
        if (Operation == 2) {
            if (eval(Current) != 0) {
                Current = eval(Memory) / eval(Current)
            } else {
                Current = "Aargh! Divide by zero"; //don't allow over MAXLENGTH digits before "." ???
            }
        }
        ;
        if (Operation == 3) {
            Current = eval(Memory) + eval(Current);
        }
        ;
        if (Operation == 4) {
            Current = eval(Memory) - eval(Current);
        }
        ;
        Operation = 0;                //clear operation
        Memory = "0";                  //clear memory
        Current = Current + "";       //FORCE A STRING!
        if (Current.indexOf("Infinity") != -1)        //eg "1e320" * 1
        {
            Current = "Aargh! Value too big";
        }
        ;
        if (Current.indexOf("NaN") != -1)        //eg "1e320" / "1e320"
        {
            Current = "Aargh! I don't understand";
        }
        ;
        document.getElementById('calculator_display').value = Current;
    }

    function FixCurrent() {
        Current = document.Calculator.Display.value;
        Current = "" + parseFloat(Current);
        if (Current.indexOf("NaN") != -1) {
            Current = "Aargh! I don't understand";
        }
        ;
        document.getElementById('calculator_display').value = Current;
    }

</script>

</head>
<body>
<!-- Home -->
<div data-role="page" id="page1">
  <div data-theme="a" data-role="header">
    <h2>
      Calculator
    </h2>

    <div data-role="fieldcontain">
      <fieldset data-role="controlgroup">
        <label for="calculator_display">
        </label>
        <input id="calculator_display" type="text" name="Display" onChange="FixCurrent()"/>
      </fieldset>
    </div>
  </div>
  <div data-role="content">
    <div class="ui-grid-d">
      <div class="ui-block-a">
        <input type="button" name="one" class="btnLogin" value="   1    " OnClick="AddDigit('1')">
      </div>
      <div class="ui-block-b">
        <input type="button" name="one" class="btnLogin" value="   2    " OnClick="AddDigit('2')">
      </div>
      <div class="ui-block-c">
        <input type="button" name="one" class="btnLogin" value="   3    " OnClick="AddDigit('3')">
      </div>
      <div class="ui-block-d">
        <input type="button" name="clear" class="btnLogin" value="    C     " OnClick="Clear()">
      </div>
      <div class="ui-block-e">
        <input type="button" name="AC" class="btnLogin" value="   AC    " OnClick="AllClear()">
      </div>
      <div class="ui-block-a">
        <input type="button" name="one" class="btnLogin" value="   4    " OnClick="AddDigit('4')">
      </div>
      <div class="ui-block-b">
        <input type="button" name="one" class="btnLogin" value="   5    " OnClick="AddDigit('5')">
      </div>
      <div class="ui-block-c">
        <input type="button" name="one" class="btnLogin" value="   6    " OnClick="AddDigit('6')">
      </div>
      <div class="ui-block-d">
        <input type="button" name="mul" class="btnLogin" value="     *     " OnClick="Operate('*')">
      </div>
      <div class="ui-block-e">
        <input type="button" name="div" class="btnLogin" value="     /      " OnClick="Operate('/')">
      </div>
      <div class="ui-block-a">
        <input type="button" name="one" class="btnLogin" value="   7    " OnClick="AddDigit('7')">
      </div>
      <div class="ui-block-b">
        <input type="button" name="one" class="btnLogin" value="   8    " OnClick="AddDigit('8')">
      </div>
      <div class="ui-block-c">
        <input type="button" name="one" class="btnLogin" value="   9    " OnClick="AddDigit('9')">
      </div>
      <div class="ui-block-d">
        <input type="button" name="add" class="btnLogin" value="    +     " OnClick="Operate('+')">
      </div>
      <div class="ui-block-e">
        <input type="button" name="sub" class="btnLogin" value="     -      " OnClick="Operate('-')">
      </div>
      <div class="ui-block-a">
        <input type="button" name="plusmin" class="btnLogin" value="  +/-  " OnClick="PlusMinus()">
      </div>
      <div class="ui-block-b">
        <input type="button" name="one" class="btnLogin" value="   0    " OnClick="AddDigit('0')">
      </div>
      <div class="ui-block-c">
        <input type="button" name="two" class="btnLogin" value="    .    " OnClick="Dot()">
      </div>
      <div class="ui-block-d">
        <input type="button" name="result" class="btnLogin" value="     =    " OnClick="Calculate()">
      </div>
      <div class="ui-block-e">
        <input type="button" name="exp" class="btnLogin" value="  E X P  " OnClick="DoExponent()">
      </div>
    </div>
  </div>
</div>
</body>
</html>